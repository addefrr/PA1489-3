Ingenjörsdagbok - Wille Norman

Börjat få ihop git commandon, var struligt med olika branches i början men har lärt mig hur man rebasear och/eller mergear
branches. Började även skapa filer snabbt direkt i terminalen med antingen cat kommandot eller nano för textediting. 

12/09/24
-
Today we delegated the work like so:
Albin: BurgerOrderer frontend
Adde: Kitchenview frontend
Wille: Backend and database research

My goal today is to research how we are going to develop the backend. Since the frontends are being written in HTML/Javascript I think node.js / express.js is the best fit. As for the database, MySQL seems like the most simple choice. 

I started with asking an AI for pointers which led me to researching front-backend communication with Javascript (AJAX/Fetch).

I learned how the server acts as a middleman. AJAX is used to send/receive data (P0ST and GET method) to a node.js/express.js server. Express.js is used to handle the HTTP requests and store data, as well as serve the html files with said data.

I managed to connect two frontends with a node.js server to send and receive simple messages. I used P0ST/GET requests with fetch on a shared route with the server((app.get(‘route’, (req, res)). 

So far, the data is stored and shared with variables, which is not ideal. Therefore we will need to learn how to use mySQL and create a persistent database.
-
18/09-24

Today we are working together to make sure everyone has a feel about how our structure looks, and how the communication between all of our files work.
Contrary to my previous journal update, we've decided to go with Flask in python instead of my previous javascript backend. Surprisingly the code 
seemed very alike, and we are still using the P0ST and GET methods through a shared route with the server. As I understand it now, the server simply sends the most recent stored data from A to B,
so we have to figure out how to first send the data through a database so we can store and possibly choose what data to send to the kitchen.

We've also decided that the easiest and most efficient way to go forward with the burgerorderer is to simply have buttons for the selection of items, and have an optional comment input if the customer
would like to remove/add something on their burgers. For that we need to figure out how we can store multiple choices in an order before it gets sent to the server.
-   
