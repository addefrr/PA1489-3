Engineering Diary - Albin Brahimi
2024-09-09
We have started to get some idea of how to use Git and GitHub as well as how Docker works. However, we were unsure how to start the project so we came to begin by making lists of the menu such as food, drinks, sizes, and prices. We have also begun to try to plan and delegate the work for the future. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-12
After a lot of talk and some help from Mikael Svahnberg, we figured out how to proceed with the project. We decided to start with FrontEnd / Design and learn how to set up a database. Ardian and I started by doing FrontEnd / Design and Wille started with the database.  
I encoded a FrontEnd with HTML / CSS for our BurgerOrderer. My current code has a lot of room for development and can be easily adjusted without destroying the code. The code offers a basic website for a restaurant where users can see a menu, customize their orders and place orders through a simple and clear layout.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-18
We decided to start over with BurgerOrderer and KitchenView because we had spent too much time on FrontEnd / Design which makes it unnecessarily more difficult for us. Design is not as important as functionality according to Mikael Svahnberg, so that is what we are going for instead.
We also agreed to use Flask to send orders from BurgerOrderer to KitchenView.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-30
Yesterday I watched almost a whole three hour long video about using MySQL as a database. I learned a lot and now know how to use it properly for the most part. Today I tried to learn how to use pytest for debugging with a goal of trying to create an automated testing system. Later today we managed to set up a MySQL database successfully. We also made a plan for testing / debugging of our project. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-06
I spent the whole week trying to further test / debugg our code and I came across several issues on the way. Since I was a complete newbie in testing / debugging code I felt overhelmed at first and did not knew where to really start so I tried different approaches which many of them failed badly. But I successfully did a commit a week ago where I did basic unit tests on the crucial parts our code, but I think it does need adjustments which I am going to discuss with our group members. I at least now have a better understanding of testing / debugging and have learned from some of my mistakes which I am going to take with me in the future. 
The biggest part of our project is done and working so we do not have much left, except adjusting and improving what we have currently.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-14
I recently switched operating system from Windows 11 to Linux. After some configuration and tinkering of my new OS I somehow managed to encounter several issues with test_app.py. I did not really have any issues until I swtiched OS, but it does not really make any sense why it shouldn't work because the code hasn't changed. The issues I had was with the imported modules like YAML, Mock etc. 
We have planned a Discord meeting where we will continue with our project's last parts (testing / debugging and Docker). Hopefully, we will be able to solve the testing / debugging issue I came along as soon as possible.
We found a way to successfully test / debug code through GitHub. The problem is that we are not sure if this is a way of doing it, so we will ask Mikael Svahnberg if this is fine.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-16 
Yesterday we changed the structure of our project because we only had one container where both KitchenView and BurgerOrderer worked together. The thing is we missed an important detail in the assignment instructions, so we had to fix it. We managed it and now have three different containers, one for the KitchenView, one for the BurgerOrderer, and one for our MySQL database. Everything is dockerized and now have little stuff left that we need to fix, like dokumentation and testing / debugging. We do not have much time left so we need to hurry a bit unfortunately. Now we also know how long things actually take.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-17
Today we did some changes to our project, once again, by replacing our MySQL database with SQLite because we came across serious issues with our MySQL database. We also did unit tests on both burgerorderer app and kitchenview app that actually works. Now we need to do some documentation that is necessary. 
I have experinced a lot of ups and downs in this project I must say, and I have learned a lot as well. I am sure that I am not alone on this one becuase it has been a hell of a drive the latest days. Our plan had many flaws but hopefully we will learn from this. The best way is sometimes the hard way. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Debugging Session - BurgerOrderer & KitchenView Unittests
We started the debugging session by examining why the BurgerOrderer tests were failing, particularly focusing on the /send-data endpoint. Wille noticed a 500 error during POST requests. Ardian and I placed breakpoints around the code handling the order data, especially focusing on the JSON payload. When monitoring the variables, we saw that the side field was missing, which led to a crash when trying to insert the data into the database.

We discussed potential solutions and quickly realized we needed better validation for the incoming request. So, we added checks to ensure all required fields, such as item, side, and order_type, were present before attempting any database operations. Once we implemented this, the status code returned was 200 as expected, and the test for /send-data passed successfully.

Next, we moved to testing KitchenView. This section was more straightforward, but we noticed minor issues with the way orders were being fetched. We placed breakpoints within the /get-orders API and realized some of the orders weren't being correctly retrieved due to database synchronization issues. After fixing that and rerunning the tests, we saw everything worked smoothly.

Overall, this session taught us a lot about how important it is to implement proper input validation and error handling early in the process. It also highlighted how closely our services depend on each other, reinforcing the need for robust unit tests and better documentation.
