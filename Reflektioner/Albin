Engineering Diary - Albin Brahimi
2024-09-09
We have started to get some idea of how to use Git and GitHub as well as how Docker works. However, we were unsure how to start the project so we came to begin by making lists of the menu such as food, drinks, sizes, and prices. We have also begun to try to plan and delegate the work for the future. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-12
After a lot of talk and some help from Mikael Svahnberg, we figured out how to proceed with the project. We decided to start with FrontEnd / Design and learn how to set up a database. Ardian and I started by doing FrontEnd / Design and Wille started with the database.  
I encoded a FrontEnd with HTML / CSS for our BurgerOrderer. My current code has a lot of room for development and can be easily adjusted without destroying the code. The code offers a basic website for a restaurant where users can see a menu, customize their orders and place orders through a simple and clear layout.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-18
We decided to start over with BurgerOrderer and KitchenView because we had spent too much time on FrontEnd / Design which makes it unnecessarily more difficult for us. Design is not as important as functionality according to Mikael Svahnberg, so that is what we are going for instead.
We also agreed to use Flask to send orders from BurgerOrderer to KitchenView.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-09-30
Yesterday I watched almost a whole three hour long video about using MySQL as a database. I learned a lot and now know how to use it properly for the most part. Today I tried to learn how to use pytest for debugging with a goal of trying to create an automated testing system. Later today we managed to set up a MySQL database successfully. We also made a plan for testing / debugging of our project. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-06
I spent the whole week trying to further test / debugg our code and I came across several issues on the way. Since I was a complete newbie in testing / debugging code I felt overhelmed at first and did not knew where to really start so I tried different approaches which many of them failed badly. But I successfully did a commit a week ago where I did basic unit tests on the crucial parts our code, but I think it does need adjustments which I am going to discuss with our group members. I at least now have a better understanding of testing / debugging and have learned from some of my mistakes which I am going to take with me in the future. 
The biggest part of our project is done and working so we do not have much left, except adjusting and improving what we have currently.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-14
I recently switched operating system from Windows 11 to Linux. After some configuration and tinkering of my new OS I somehow managed to encounter several issues with test_app.py. I did not really have any issues until I swtiched OS, but it does not really make any sense why it shouldn't work because the code hasn't changed. The issues I had was with the imported modules like YAML, Mock etc. 
We have planned a Discord meeting where we will continue with our project's last parts (testing / debugging and Docker). Hopefully, we will be able to solve the testing / debugging issue I came along as soon as possible.
We found a way to successfully test / debug code through GitHub. The problem is that we are not sure if this is a way of doing it, so we will ask Mikael Svahnberg if this is fine.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-16 
Yesterday we changed the structure of our project because we only had one container where both KitchenView and BurgerOrderer worked together. The thing is we missed an important detail in the assignment instructions, so we had to fix it. We managed it and now have three different containers, one for the KitchenView, one for the BurgerOrderer, and one for our MySQL database. Everything is dockerized and now have little stuff left that we need to fix, like dokumentation and testing / debugging. We do not have much time left so we need to hurry a bit unfortunately. Now we also know how long things actually take.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-17
Today we did some changes to our project, once again, by replacing our MySQL database with SQLite because we came across serious issues with our MySQL database. Since we were in a hurry we only did a simple plan for unit testing like basic functionality such as test homepage loading, validate order submission through the API, check order retrieval from the database. 
I have experinced a lot of ups and downs in this project I must say, and I have learned a lot as well. I am sure that I am not alone on this one becuase it has been a hell of a ride the latest days. Our plan had many flaws but hopefully we will learn from this. The best way is sometimes the hard way. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Debugging Session
During the project, I chose to debug the test_send_data function in our unit tests for the BurgerOrderer app. I set breakpoints in the test_send_data method within our test file. Since we were in a bit of a hurry, I focused on using Visual Studio Code effectively. I used the “Continue” button to run the program until the next breakpoint, “Step Over” to skip functions I didn’t need, and “Step Into” to look closely at the order processing code.

I monitored the response variable to see the outcome of the order submission. Its initial value was a response object that I checked after sending a test order. By watching it, I saw how it changed based on whether the order was successful. I also tested different paths, like submitting various orders and even canceling one midway. This helped me see how the code paths changed and how the values of monitored variables were affected.

Overall, the debugging session was a learning experience. I was able to understand where things went wrong and how to fix them. Initially, I had trouble with placing breakpoints but improved my skills over time. Debugging turned out to be a helpful tool for catching errors quickly and understanding the flow of my code better.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2024-10-18
We went through our entire project together today after I had merged a branch with the main repo yesterday. Our work could be much better if we had used our time better and stuck more to the plan. It still feels pretty good because I learned a lot, like using Docker, HTML, Flask, MySQL and SQLite, basic unit testing with Python, documentation etc. Now I feel like a have a better "toolboox" for the future as Mikael Svahnberg calls it. 

